// 时间格式化工具函数
var formatTimestamp = function(timestamp) {
  if (!timestamp) {
    return '';
  }
  
  // 如果是字符串，尝试解析
  var date;
  if (typeof timestamp === 'string') {
    // 处理ISO格式时间字符串
    if (timestamp.includes('T')) {
      date = getDate(timestamp);
    } else {
      // 处理时间戳字符串
      date = getDate(parseInt(timestamp));
    }
  } else {
    // 处理数字时间戳
    date = getDate(timestamp);
  }
  
  if (!date || isNaN(date.getTime())) {
    return '';
  }
  
  var now = getDate();
  var diff = now.getTime() - date.getTime();
  
  // 小于1分钟
  if (diff < 60000) {
    return '刚刚';
  }
  
  // 小于1小时
  if (diff < 3600000) {
    var minutes = Math.floor(diff / 60000);
    return minutes + '分钟前';
  }
  
  // 小于24小时
  if (diff < 86400000) {
    var hours = Math.floor(diff / 3600000);
    return hours + '小时前';
  }
  
  // 小于7天
  if (diff < 604800000) {
    var days = Math.floor(diff / 86400000);
    return days + '天前';
  }
  
  // 超过7天，显示具体日期
  var year = date.getFullYear();
  var month = date.getMonth() + 1;
  var day = date.getDate();
  var hour = date.getHours();
  var minute = date.getMinutes();
  
  // 如果是今年，不显示年份
  if (year === now.getFullYear()) {
    return month + '月' + day + '日 ' + 
           (hour < 10 ? '0' + hour : hour) + ':' + 
           (minute < 10 ? '0' + minute : minute);
  }
  
  // 跨年显示完整日期
  return year + '年' + month + '月' + day + '日 ' + 
         (hour < 10 ? '0' + hour : hour) + ':' + 
         (minute < 10 ? '0' + minute : minute);
};

// 分数格式化函数
var formatScore = function(score) {
  if (score === null || score === undefined) {
    return '0';
  }
  
  var num = parseInt(score);
  if (isNaN(num)) {
    return '0';
  }
  
  if (num > 0) {
    return '+' + num;
  } else if (num < 0) {
    return num.toString();
  } else {
    return '0';
  }
};

module.exports = {
  formatTimestamp: formatTimestamp,
  formatScore: formatScore
};
